// Arduino pin assignment
#define PIN_LED 9
#define PIN_TRIG 12 // sonar sensor TRIGGER
#define PIN_ECHO 13 // sonar sensor ECHO

// configurable parameters
#define SND_VEL 346.0      // sound velocity at 24 degrees Celsius (unit: m/s)
#define INTERVAL 100       // sampling interval (unit: ms)
#define PULSE_DURATION 10  // ultrasonic Pulse Duration (unit: us)
#define _DIST_MIN 100.0    // minimum distance to be measured (unit: mm)
#define _DIST_MAX 300.0    // maximum distance to be measured (unit: mm)

#define TIMEOUT ((INTERVAL / 2) * 1000.0) // maximum echo waiting time (unit: us)
#define SCALE (0.001 * 0.5 * SND_VEL)      // coefficient to convert duration to distance

unsigned long last_sampling_time; // unit: ms

void setup() {
  // initialize GPIO pins
  pinMode(PIN_LED, OUTPUT);
  pinMode(PIN_TRIG, OUTPUT);  // sonar TRIGGER
  pinMode(PIN_ECHO, INPUT);   // sonar ECHO
  digitalWrite(PIN_TRIG, LOW); // turn-off Sonar

  // initialize serial port
  Serial.begin(57600);
}

void loop() {
  float distance;

  // wait until the next sampling time.
  if (millis() - last_sampling_time < INTERVAL)
    return;

  distance = USS_measure(PIN_TRIG, PIN_ECHO); // read distance

  if (distance == 0.0 || distance > _DIST_MAX) {
    distance = _DIST_MAX + 10.0; // Set Higher Value
    digitalWrite(PIN_LED, 1);    // LED OFF
  } else if (distance < _DIST_MIN) {
    distance = _DIST_MIN - 10.0; // Set Lower Value
    digitalWrite(PIN_LED, 1);    // LED OFF
  } else { // In the desired Range
    int brightness = 0;

    if (distance >= 100 && distance <= 200) {
      // Increase LED brightness gradually between 100mm and 200mm
      brightness = map(distance, 100, 200, 0, 255);
    } else if (distance > 200 && distance <= 300) {
      // Decrease LED brightness gradually between 200mm and 300mm
      brightness = map(distance, 200, 300, 255, 0);
    } else {
      // For other distances, keep LED at full brightness
      brightness = 255;
    }

    analogWrite(PIN_LED, brightness);
  }

  // Output the distance to the serial port
  Serial.print("Min:");
  Serial.print(_DIST_MIN);
  Serial.print(",distance:");
  Serial.print(distance);
  Serial.print(",Max:");
  Serial.print(_DIST_MAX);
  Serial.println("");

  // Update the last sampling time
  last_sampling_time = millis();
}

// Get a distance reading from USS. The return value is in millimeters.
float USS_measure(int TRIG, int ECHO) {
  digitalWrite(TRIG, HIGH);
  delayMicroseconds(PULSE_DURATION);
  digitalWrite(TRIG, LOW);

  return pulseIn(ECHO, HIGH, TIMEOUT) * SCALE; // unit: mm
}
